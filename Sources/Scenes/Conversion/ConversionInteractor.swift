//
//  ConversionInteractor.swift
//  Project1
//
//  Created by Mihai Cristescu on 17/12/2017.
//  Copyright (c) 2017 Mihai Cristescu. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ConversionBusinessLogic {
    func convert(request: Conversion.Length.Request)
}

protocol ConversionDataStore {
    //var name: String { get set }
}

class ConversionInteractor: ConversionBusinessLogic, ConversionDataStore {
    var presenter: ConversionPresentationLogic?
    var worker: ConversionWorker?
    
    // MARK: Do something
    
    func convert(request: Conversion.Length.Request) {
        
        // Check if input is not empty
        guard let valueString = request.valueString, valueString.count > 0 else {
            let response = Conversion.Length.Error(message: "Error: Input is empty.")
            presenter?.presentConvertionError(response: response)
            return
        }
        
        // Check if input is valid number
        guard let valueToConvert = Double(valueString) else {
            let response = Conversion.Length.Error(message: "Error: Input is not a valid number.")
            presenter?.presentConvertionError(response: response)
            return
        }
        
        worker = ConversionWorker()
        
        let convertedValue: Double
        
        if request.buttonTag == 0 {
            // Convert to mm
            convertedValue = worker!.convertToMilimeters(valueInM: valueToConvert)
        } else {
            // Convert to km
            convertedValue = worker!.convertToKilometers(valueInM: valueToConvert)
        }
        
        let response = Conversion.Length.Response(conversionType: request.buttonTag, convertedValue: convertedValue)
        presenter?.presentConvertedValue(response: response)
    }
}
